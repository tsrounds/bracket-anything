rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && (
        // Check for admin email
        request.auth.token.email == 'teddyrounds@gmail.com' ||
        // Or check for admin role in user profile
        (exists(/databases/$(database)/documents/userProfiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin')
      );
    }
    
    // Allow reading and writing quizzes for authenticated users
    match /quizzes/{quizId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        // Allow users to update their own submissions
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['submissions']) ||
        // Allow admins to update quiz status and correct answers
        isAdmin()
      );
      allow delete: if isAdmin();
    }
    
    // Allow users to read and write their own profiles
    match /userProfiles/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to read and write their own quiz registrations
    match /quizRegistrations/{registrationId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Allow creating and updating quiz submissions
    match /submissions/{submissionId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
} 